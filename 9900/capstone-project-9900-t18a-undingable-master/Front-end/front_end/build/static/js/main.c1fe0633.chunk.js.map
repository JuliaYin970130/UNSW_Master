{"version":3,"sources":["utils/index.js","components/Header/Header.jsx","layouts/DefaultLayout/index.jsx","components/Item/index.jsx","apis/base.js","apis/product.js","pages/Home/index.jsx","apis/user.js","pages/Login/index.jsx","pages/Register/index.jsx","pages/Admin/index.jsx","pages/User/index.jsx","apis/order.js","pages/Cart/index.jsx","apis/shoppingCart.js","pages/Questionaire/index.jsx","apis/comment.js","pages/ItemInfo/index.jsx","components/SearchList/index.jsx","pages/Search/index.jsx","pages/Checkout/index.jsx","pages/AdminManage/index.jsx","pages/Evaluation/index.jsx","pages/ItemManage/index.jsx","App.jsx","index.js"],"names":["safeParseJSON","val","JSON","parse","e","getUserInfo","window","localStorage","getItem","setUserInfo","user","password","setItem","stringify","formatPrice","originalPrice","toFixed","Search","Input","Header","Layout","HeaderComp","userInfo","history","useHistory","menu","name","Item","to","type","role","onClick","confirm","removeItem","location","style","position","top","backgroundColor","zIndex","width","borderBottom","mode","selectable","fontSize","HomeOutlined","margin","right","ShoppingOutlined","marginRight","overlay","placement","href","className","preventDefault","color","UserOutlined","placeholder","onSearch","value","console","log","push","message","error","left","enterButton","DefaultLayout","Component","component","rest","render","matchProps","itemData","this","props","id","src","imgUrl","alt","brand","saleNum","toLocaleString","stock","handleReturnResult","res","response","data","code","Error","request","axios","create","baseURL","headers","_saleNumMap","Map","getSaleNumMap","a","size","get","saleNumResponse","saleNumList","productid","salenum","set","queryItems","query","disableRecommend","price","split","lowPrice","highPrice","params","low_price","high_price","itemsResponse","Object","entries","length","top_k","itemList","saleNumMap","map","item","SubMenu","Menu","Content","Sider","CATEGORY","key","title","valueMap","Home","useState","setQuery","products","setProducts","useLocation","useEffect","then","items","catch","overflowY","height","defaultOpenKeys","borderRight","categoryItem","label","marginLeft","padding","minHeight","wrap","queryUserList","register","post","qs","submitQuestionaire","questionaire","updateQuestionaire","Login","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","username","err","autoComplete","rules","required","Password","valuePropName","offset","htmlType","marginBottom","Register","email","confirmPassword","Admin","Option","Select","dataSource","setDataSource","userList","setUserList","itemscolumns","dataIndex","record","DeleteOutlined","onDeletRecord","pre","filter","isModalVisible","setIsModalVisible","Form","useForm","form","columns","pagination","pageSize","visible","onCancel","okText","onOk","validateFields","resetFields","newRecord","itemID","itemName","Brand","Stock","Sales","onCreate","Group","TextArea","User","phonePrefix","setPhonePrefix","phone","setPhone","orderList","setOrderList","useMemo","userId","user_id","regResult","exec","prefix","replace","parsePhone","layout","prefixSelector","noStyle","onChange","srcSet","marginTop","orientation","validateMessages","types","number","newUserInfo","success","addonBefore","target","orderItem","orderId","orderTime","Date","totalPrice","Cart","cartItems","setCartItems","fetchItems","useCallback","checked","handleQuantityChange","productId","quantity","promise","product_id","deleteShoppingCart","updateQuantity","reduce","sum","cartItem","product","i","newCartItems","min","encodeURIComponent","v","Title","Typography","Questionaire","isLoading","setIsLoading","lower","upper","setQuestionaire","submitFn","forwho","userid","family","lowerprice","higherprice","questionaireArr","Array","isArray","level","viewCommentByProductId","addOrUpdateComment","stars","comment","order_id","ItemInfo","parsedQuery","search","itemId","setItemData","itemComments","setItemComments","setQuantity","handleAddCart","addShoppingCart","Promise","all","comments","display","alignItems","justifyContent","starArr","commentItem","starAvg","curVal","author","avatar","content","datetime","moment","subtract","format","fromNow","disabled","max","bordered","scentNotes","gender","description","header","itemLayout","renderItem","actions","SearchList","keyword","setMin","setMax","searchResult","setSearchResult","slice","defaultCurrent","defaultPageSize","total","textAlign","onFinishFailed","errorInfo","Checkout","productList","productItem","Panel","Collapse","onCheckOut","amount","defaultActiveKey","showArrow","block","AdminManage","adminDataSource","setAdminDataSource","admincolumns","onDeleteRecord","adminname","adminID","adminName","Evaluation","commentList","setCommentList","handleChangeField","newList","queryOrderById","orderdetail","character","HeartFilled","ItemManage","itemOrders","setItemOrders","orders","orderColumns","commentColumns","ellipsis","showTitle","_v","_a","_val","handleDeleteComments","order_Id","App","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1fe0633.chunk.js","sourcesContent":["export const safeParseJSON = (val) => {\n\ttry {\n\t\treturn JSON.parse(val);\n\t} catch(e) {\n\t\treturn null;\n\t}\n};\n\nexport const getUserInfo = () => safeParseJSON(window.localStorage.getItem(\"loginState\"));\n\nexport const setUserInfo = (user) => {\n\tdelete user.password;\n    window.localStorage.setItem(\"loginState\", JSON.stringify(user));\n};\n\nexport const formatPrice = (originalPrice) => {\n\tif (!originalPrice) {\n\t\treturn '??';\n\t}\n\treturn (originalPrice / 100).toFixed(2);\n};","import React, { Fragment } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getUserInfo } from \"../../utils\";\nimport { Layout, Menu, Dropdown, Button, Input, message } from \"antd\";\nimport { HomeOutlined, UserOutlined, ShoppingOutlined, TeamOutlined } from \"@ant-design/icons\";\nimport \"./Header.css\";\n\nconst { Search } = Input;\nconst { Header } = Layout;\n\nconst HeaderComp = () => {\n\n    const userInfo = getUserInfo();\n    const history = useHistory();\n\n    const menu = (\n        <Menu>\n            {/* sign up */}\n            {userInfo && userInfo.name ? (\n                <Fragment>\n                    <Menu.Item key=\"username\">\n                        <Link to=\"/user\">\n                            <Button type=\"text\">{userInfo.name}</Button>\n                        </Link>\n                    </Menu.Item>\n                    {userInfo.role <= 1\n                        ? <Menu.Item key=\"admin-dashboard\">\n                            <Link to=\"/admin\">\n                                <Button type=\"text\">Admin Dashboard</Button>\n                            </Link>\n                        </Menu.Item>\n                        : null\n                    }\n                    {userInfo.role === 0\n                        ? <Menu.Item key=\"admin-manage\">\n                            <Link to=\"/adminManage\">\n                                <Button type=\"text\">Manage Admin</Button>\n                            </Link>\n                        </Menu.Item>\n                        : null\n                    }\n                    <Menu.Item key=\"log-off\">\n                        <Button\n                            onClick={() => {\n                                const isConfirm = window.confirm(\"Do you want to logout?\");\n                                if (!isConfirm) {\n                                    return;\n                                }\n                                // Logout\n                                window.localStorage.removeItem(\"loginState\");\n                                // window.location.reload();\n                                window.location = '/';\n                            }}\n                            type=\"text\"\n                        >\n                            Logout\n                        </Button>\n                    </Menu.Item>\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <Menu.Item key=\"sign-in\">\n                        <Link to=\"/login\">\n                            <Button type=\"text\">Sign in</Button>\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"sign-up\">\n                        <Link to=\"/reg\">\n                            <Button type=\"text\">Register</Button>\n                        </Link>\n                    </Menu.Item>\n                </Fragment>\n            )}\n        </Menu>\n    );\n\n    // search function\n    const onSearch = (value) => {\n        console.log(value);\n        if (value) {\n            // search content\n            history.push(`/search?keyword=${value}`);\n        } else message.error('Please check your search input!');\n    }\n\n\n    return (\n        <Header\n            style={{\n                position: 'sticky',\n                top: 0,\n                backgroundColor: \"#fff\",\n                zIndex: 999,\n                width: \"100vw\",\n                borderBottom: '1px solid #f0f0f0',\n            }}\n        >\n            <Menu mode=\"horizontal\" style={{ position: \"relative\" }} selectable={false}>\n                {/* home page  */}\n                <Menu.Item key=\"homepage\" style={{ fontSize: \"20px\" }}>\n                    <Link to=\"/\">\n                        <HomeOutlined style={{ fontSize: \"20px\", margin: \"5px\" }} />\n                        Home\n                    </Link>\n                </Menu.Item>\n\n                {/* cart */}\n                <Menu.Item\n                    key=\"Cart\"\n                    style={{ position: \"absolute\", right: \"8%\", fontSize: \"16px\" }}\n                >\n                    {/* <ShoppingOutlined /> */}\n                    <Link to=\"Cart\">\n                        <ShoppingOutlined style={{ fontSize: \"16px\", marginRight: \"5px\" }} />\n                        Cart\n                    </Link>\n                </Menu.Item>\n\n                {/* Account content */}\n                <Dropdown overlay={menu} placement=\"bottomCenter\" >\n\n                    <a\n                        href=\"/#\"\n                        className=\"link\"\n                        onClick={(e) => e.preventDefault()}\n                        style={{\n                            position: \"absolute\",\n                            right: 0,\n                            fontSize: \"16px\",\n                            color: \"#000\",\n                        }}\n                    >\n                        <UserOutlined style={{ marginRight: '5px' }} />\n                        Account\n                    </a>\n                </Dropdown>\n            </Menu>\n            <Search\n                placeholder=\"Search\"\n                onSearch={onSearch}\n                style={{\n                    position: \"relative\",\n                    left: \"30%\",\n                    top: \"-46px\",\n                    width: \"400px\",\n                }}\n                enterButton\n            />\n        </Header>\n    );\n};\n\nexport default HeaderComp;\n","import { Layout } from 'antd';\nimport {\n    Route\n} from 'react-router-dom';\nimport Header from '../../components/Header/Header';\n\nimport './index.css';\n\nconst DefaultLayout = ({component: Component, ...rest}) => {\n    return (\n        <Route {...rest} render={matchProps => (\n            <Layout>\n                <Header/>\n                <Layout>\n                    <Component {...matchProps} />\n                </Layout>\n            </Layout>\n        )} />\n    );\n};\n\nexport default DefaultLayout;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.css';\n\nexport default class Item extends Component {\n    render() {\n        const { itemData } = this.props;\n        return (\n            <Link to={`/itemInfo?id=${itemData.id}`}>\n                {/* single product info */}\n              <div className=\"item-card\">\n                <img src={itemData.imgUrl} alt=\"Aventus Creed for men\" />\n                <div className=\"item-info-block\">\n                    <p className=\"item-name\">{itemData.name}</p>\n                    <p className=\"brand\">{itemData.brand}</p>\n                    <p className=\"sale\">{itemData.saleNum.toLocaleString('en-US')} sold</p>\n                    <p className=\"stock\">Stock: {itemData.stock}</p>\n                </div>\n              </div>\n            </Link>\n        )\n    }\n}\n","import axios from 'axios';\n\nexport const handleReturnResult = (res) => {\n    const response = res.data;\n    if (response && response.code === 200) {\n        return response.data;\n    }\n    throw new Error(`[${response ? response.code : '-1'}]${response ? response.message : 'Unknown biz server error'}`);\n};\n\nexport const request = axios.create({\n    baseURL: '',\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    }\n});","import { request, handleReturnResult } from './base';\nimport { getUserInfo } from '../utils';\n// product api, use map to apply database\nlet _saleNumMap = new Map();\nconst getSaleNumMap = async () => {\n    if (!_saleNumMap.size) {\n        const saleNumResponse = await request.get('/product/Sale');\n        const saleNumList = handleReturnResult(saleNumResponse);\n        for (const { productid, salenum } of saleNumList) {\n            _saleNumMap.set(productid, salenum);\n        }\n    }\n    return _saleNumMap;\n};\n\nexport const queryItems = async (query, disableRecommend) => {\n    let itemsResponse;\n    if (query && query.price) {\n        const [lowPrice, highPrice] = query.price.split(':');\n        itemsResponse = await request.get('/product/viewByPriceRange', {\n            params: {\n                low_price: lowPrice * 100,\n                high_price: highPrice * 100\n            }\n        });\n    } else if (!disableRecommend && (!query || !Object.entries(query).length)) {\n        const userInfo = await getUserInfo();\n        itemsResponse = await request.get('/product/recommend', {\n            params: {\n                id: (userInfo && userInfo.id) || 0,\n                top_k: 50\n            }\n        });\n    } else {\n        itemsResponse = await request.get('/product/view', { params: query });\n    }\n    const itemList = await handleReturnResult(itemsResponse);\n    const saleNumMap = await getSaleNumMap();\n    return itemList.map((item) => ({\n        ...item,\n        saleNum: saleNumMap.get(item.id)\n    }));\n};","import React, { useState, useEffect, Fragment } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Layout, Space, Menu, Breadcrumb, message } from 'antd';\n\nimport Item from '../../components/Item';\nimport { queryItems } from '../../apis/product';\n\nimport './index.css';\n\nconst { SubMenu } = Menu;\nconst { Content, Sider } = Layout;\n\nconst CATEGORY = [\n  {\n    key: 'gender',\n    title: 'Gender',\n    valueMap: {\n      'Women': 'Women',\n      'Men': 'Men',\n      'Unisex': 'Unisex'\n    }\n  },\n  {\n    key: 'brand',\n    title: 'Top Brand',\n    valueMap: {\n      'BVLGARI': 'BVLGARI',\n      'Chanel': 'Chanel',\n      'Creed': 'Creed',\n      'Calvin Klein': 'Calvin Klein',\n      'Dior': 'Dior',\n      'Gucci': 'Gucci',\n      'Guerlain': 'Guerlain',\n      'HERMAS': 'HERMAS',\n      'Tom Ford': 'Tom Ford'\n    }\n  },\n  {\n    key: 'scentNotes',\n    title: 'Scent Notes',\n    valueMap: {\n      'Amber': 'Amber',\n      'Citrus': 'Citrus',\n      'Floral': 'Floral',\n      'Fresh': 'Fresh',\n      'Fruity': 'Fruity',\n      'Oriental': 'Oriental',\n      'Rum': 'Rum',\n      'Spice': 'Spice',\n      'Woody': 'Woody'\n    }\n  },\n  {\n    key: 'price',\n    title: 'Price',\n    valueMap: {\n      '15:50': 'AU $15 - 50',\n      '50:200': 'AU $50 - 200',\n      '200:500': 'AU $200 - 500'\n    }\n  }\n];\n\nconst Home = () => {\n  const [query, setQuery] = useState({});\n  const [products, setProducts] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (Object.entries(query).length) {\n      // Empty query search\n      setQuery({});\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location]);\n\n  useEffect(() => {\n    queryItems(query).then((items) => {\n      console.log('items', items);\n      setProducts(items);\n    }).catch((error) => {\n      console.error(error);\n      message.error((error && error.message) || \"Unknown error\");\n    });\n  }, [query]);\n\n  return (\n    <Fragment>\n      {/* side cortegray */}\n      <Sider\n        width={200}\n        className=\"site-layout-background\"\n        style={{\n          overflowY: \"auto\",\n          height: \"100%\",\n          position: \"fixed\",\n          left: 0,\n        }}\n      >\n        <Menu\n          mode=\"inline\"\n          defaultOpenKeys={CATEGORY.map((item) => `sub-${item.key}`)}\n          style={{ borderRight: 0 }}\n        >\n          {CATEGORY.map((categoryItem) => (\n            <SubMenu key={`sub-${categoryItem.key}`} title={categoryItem.title} style={{ fontSize: \"16px\" }}>\n              {Object.entries(categoryItem.valueMap).map(([value, label]) => (\n                <Menu.Item key={value} onClick={() => setQuery({\n                  [categoryItem.key]: value\n                })}>{label}</Menu.Item>\n              ))}\n            </SubMenu>\n          ))}\n        </Menu>\n      </Sider>\n\n      {/* content */}\n      <Layout style={{ marginLeft: 200 }}>\n        {/* tag */}\n        <Breadcrumb style={{ margin: \"30px 25px 10px\" }}>\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\n          <Breadcrumb.Item>Products</Breadcrumb.Item>\n        </Breadcrumb>\n\n        {/* product */}\n        <Content\n          style={{\n            padding: 24,\n            height: \"100%\",\n            minHeight: \"90vh\",\n            overflowY: \"auto\",\n          }}\n        >\n          <Space size=\"large\" wrap>\n          \n            {products.map((itemData) => <Item itemData={itemData} key={'HomeItemList-' + itemData.id}></Item>)}\n          </Space>\n        </Content>\n      </Layout>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import qs from 'querystring';\nimport { request, handleReturnResult } from './base';\n// set different api and match the unique id info\nexport const queryUserList = () => request.get('/user/queryList').then(handleReturnResult);\nexport const login = (user) => request.post('/user/login', qs.stringify(user)).then(handleReturnResult);\nexport const register = (user) => request.post('/user/register', qs.stringify(user)).then(handleReturnResult);\nexport const updateProfile = (user) => request.post('/user/updateProfile', qs.stringify(user)).then(handleReturnResult);\nexport const getQuestionaire = (userId) => request.get('/questionnaire/get', {\n\tparams: {\n\t\tuserid: userId\n\t}\n}).then(handleReturnResult).then((questionaireArr) => (Array.isArray(questionaireArr) && questionaireArr[0]) || null);\nexport const submitQuestionaire = (questionaire) => request.post('/questionnaire/insert', qs.stringify(questionaire)).then(handleReturnResult);\nexport const updateQuestionaire = (questionaire) => request.post('/questionnaire/update', qs.stringify(questionaire)).then(handleReturnResult);","import React from 'react';\nimport {\n    Link,\n    useHistory\n} from 'react-router-dom';\nimport { login } from '../../apis/user';\nimport { Button, Card, Form, Input, Checkbox, message } from 'antd';\n\nimport './index.css';\nimport { setUserInfo } from '../../utils';\n\nconst Login = () => {\n    const history = useHistory();\n    const onFinish = (values) => {\n        const { username, password } = values;\n\n        return login({\n            name: username,\n            password,\n            role: 2\n        })\n        .then((res) => {\n            setUserInfo(res);\n            history.push('/');\n        })\n        .catch((err) => {\n            console.error(err);\n            message.error((err && err.message) || 'Unknown error');\n        });\n    };\n\n    return (\n        <div id=\"login-page\">\n            <Card id=\"login-box\" title=\"Log In\">\n                <div id=\"login-box-body\">\n                    <Form\n                        name=\"basic\"\n                        labelCol={{\n                            span: 8,\n                        }}\n                        wrapperCol={{\n                            span: 16,\n                        }}\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={onFinish}\n                        autoComplete=\"off\"\n                    >\n                        <Form.Item\n                            label=\"Username\"\n                            name=\"username\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"remember\"\n                            valuePropName=\"checked\"\n                            wrapperCol={{\n                                offset: 8,\n                                span: 16,\n                            }}\n                        >\n                            <Checkbox>Remember me</Checkbox>\n                        </Form.Item>\n\n                        <Form.Item\n                            wrapperCol={{\n                                offset: 8,\n                                span: 16,\n                            }}\n                        >\n                            <div id=\"login-btn-wrapper\">\n                                <Button\n                                    id=\"login-button\"\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                >\n                                    Log In\n                                </Button>\n                                <Link to=\"/\" className=\"skip\">\n                                    <Button>Back</Button>\n                                </Link>\n                            </div>\n                        </Form.Item>\n\n                        <Form.Item\n                            wrapperCol={{\n                                offset: 8,\n                                span: 16,\n                            }}\n                            style={{\n                                marginBottom: 0\n                            }}\n                        >\n                            {/* <Link to=\"/reg\">\n                                <a href=\"\">Forgot password?</a>\n                            </Link> */}\n                            <Link to=\"/reg\" id=\"login-reg-link\">\n                                <Button type=\"link\">New! Register Here!</Button>\n                            </Link>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Card>\n        </div>\n    );\n}\n\nexport default Login;\n","import React from 'react';\nimport {\n    Link,\n    useHistory\n} from 'react-router-dom';\nimport { Layout, Button, Card, Form, Input, message } from 'antd';\nimport { register } from '../../apis/user';\n\nimport './index.css';\nimport { setUserInfo } from '../../utils';\n\nconst Register = () => {\n\tconst history = useHistory();\n    const onFinish = (values) => {\n        const { username, email, password, confirmPassword } = values;\n\t\tif (password !== confirmPassword) {\n\t\t\tmessage.error('password and confirm-password is not same!');\n\t\t\treturn;\n\t\t}\n        return register({\n            name: username,\n            email,\n            password,\n            role:2\n        })\n        .then((res) => {\n            setUserInfo(res);\n            history.push('/questionaire');\n        })\n        .catch((err) => {\n            console.error(err);\n            message.error((err && err.message) || 'Unknown error');\n        });\n    };\n\n    return (\n        <Layout>\n            <div id=\"reg-page\">\n                <Card id=\"reg-box\" title=\"Register\">\n                    <div id=\"reg-box-body\">\n                        <Form\n                            name=\"basic\"\n                            labelCol={{\n                                span: 8,\n                            }}\n                            wrapperCol={{\n                                span: 16,\n                            }}\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={onFinish}\n                            autoComplete=\"off\"\n                            style={{\n                                width: '100%'\n                            }}\n                        >\n                            <Form.Item\n                                label=\"Username\"\n                                name=\"username\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"E-Mail\"\n                                name=\"email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your e-mail!',\n                                    },\n                                ]}\n                            >\n                                <Input type=\"email\" />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Password\"\n                                name=\"password\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!',\n                                    },\n                                ]}\n                            >\n                                <Input.Password />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Confirm Password\"\n                                name=\"confirmPassword\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your confirm password!',\n                                    },\n                                ]}\n                            >\n                                <Input.Password />\n                            </Form.Item>\n\n                            <Form.Item\n                                wrapperCol={{\n                                    offset: 8,\n                                    span: 16,\n                                }}\n                            >\n                                <Button\n                                    id=\"login-button\"\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                >\n                                    Submit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </Card>\n                <div className=\"reg-bottom\">\n                    <Link to=\"/\">\n                        <div className=\"reg-bottom-btn\">Skip and Visit</div>\n                    </Link>\n                </div>\n            </div>\n        </Layout>\n    );\n}\nexport default Register;\n","import React, { useState, useEffect } from 'react';\nimport { Layout, Divider, Table, Button, Modal, Form, Input, Radio, Select, message } from 'antd';\nimport { DeleteOutlined }  from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { queryItems } from '../../apis/product';\nimport { queryUserList } from '../../apis/user';\n\nimport './index.css';\n\nconst Admin = () => {\n    const { Content } = Layout;\n    const { Option } = Select;\n\n    const [dataSource, setDataSource] = useState([]);\n    const [userList, setUserList] = useState([]);\n\n    useEffect(() => {\n        queryItems({}, true)\n            .then((itemList) => {\n                setDataSource(itemList.map((item) => ({\n                    ...item,\n                    key: `item-${item.id}`\n                })));\n            })\n            .catch((err) => {\n                message.error(`[GetItemList Failed] ${err.message}`);\n            });\n    }, []);\n\n    useEffect(() => {\n        queryUserList()\n            .then((userList) => {\n                setUserList(userList.map((user) => ({\n                    ...user,\n                    key: `user-${user.id}`\n                })));\n            })\n            .catch((err) => {\n                message.error(`[GetUserList Failed] ${err.message}`);\n            });\n    }, []);\n\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    };\n\n    // item表头\n    const itemscolumns = [\n        {\n            title: \"Item ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n            render: (id) => \n                <Link to={`/itemManage?id=${id}`}>\n                    {id}\n                </Link>\n        },\n        {\n            title: \"Item Name\",\n            dataIndex: \"name\",\n            key: \"name\",\n        },\n        {\n            title: \"Brand\",\n            dataIndex: \"brand\",\n            key: \"brand\",\n        },\n        {\n            title: \"Stock\",\n            dataIndex: \"stock\",\n            key: \"stock\",\n        },\n        {\n            title: \"Sales\",\n            dataIndex: \"saleNum\",\n            key: \"saleNum\",\n        },\n        {\n            title: \"Action\",\n            key: \"action\",\n            render: (record) => (\n                // <a href=\"/#\" >Delete</a>\n                <DeleteOutlined onClick={()=>{onDeletRecord(record)}} style={{marginLeft:\"30%\"}}/>\n                    \n            )\n        }\n    ];\n\n    const onDeletRecord = (record) =>{\n        // console.log(record)\n        setDataSource(pre => {\n            return pre.filter(item => item.key !== record.key)\n        })\n\n    }\n\n    // Add item relpy\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n\n    const onCreate = (values) => {\n        console.log('Received values of form: ', values);\n        const newRecord = {\n            key: dataSource.length + 1,\n            itemID: 56332998,\n            itemName: values.itemName,\n            Brand: values.brand,\n            Stock: values.stock,\n            Sales: 0,\n        }\n\n        setDataSource(pre=>{\n            return [...pre,newRecord]\n        })\n        \n        setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    const [form] = Form.useForm();\n\n    // 用户表头\n    const userColumns = [\n        {\n            title: \"User ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n        },\n        {\n            title: \"User Name\",\n            dataIndex: \"name\",\n            key: \"name\",\n        },\n        {\n            title: \"Email\",\n            dataIndex: \"email\",\n            key: \"email\",\n        },\n        {\n            title: \"Phone\",\n            dataIndex: \"phone\",\n            key: \"phone\",\n        },\n    ];\n\n    return (\n        <Content\n            className=\"AdminContainer\"\n            style={{ padding: \"0 50px\", minHeight: '95vh' }}\n        >\n            {/* 商品列表 */}\n            <div className=\"item-list\">\n                {/* item信息 */}\n                <h2>Item List</h2>\n                {/* list */}\n                <Divider></Divider>\n                <Table\n                    // 表头\n                    columns={itemscolumns}\n                    // 数据\n                    dataSource={dataSource}\n                    size=\"middle\"\n                    pagination={{ pageSize: 10, size: \"small\" }}\n                />\n\n                <Button type=\"primary\" onClick={showModal}>\n                    Add a new item\n                </Button>\n\n                <Modal\n                    title=\"Add a new item\"\n                    visible={isModalVisible}\n                    style={{ top: 60 }}\n                    onCancel={handleCancel}\n                    okText=\"Confirm\"\n                    onOk={() => {\n                        form.validateFields()\n                            .then((values) => {\n                                form.resetFields();\n                                onCreate(values);\n                            })\n                            .catch((err) => {\n                                console.error(err);\n                                message.error((err && err.message) || 'Unknown error');\n                            });\n                    }}\n                >\n                    {/* 添加商品的表单内容 */}\n                    <Form\n                        form={form}\n                        // layout=\"vertical\"\n                        name=\"add_item\"\n                        {...formItemLayout}\n                    >\n                        <Form.Item\n                            name=\"itemName\"\n                            label=\"Item name\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Please input item name!\",\n                                },\n                            ]}\n                        >\n                            <Input type=\"textarea\" />\n                        </Form.Item>\n                        <Form.Item name=\"brand\" label=\"Brand\" rules={[\n                            {\n                                required: true,\n                                message: 'Please input brand!',\n                            },\n                        ]}>\n                            <Input type=\"textarea\" />\n                        </Form.Item>\n                        <Form.Item name=\"gender\" label=\"Gender\" rules={[\n                            {\n                                required: true,\n                                message: 'Please select gender!',\n                            },\n                        ]}>\n                            <Radio.Group>\n                                <Radio value=\"women\">Women</Radio>\n                                <Radio value=\"men\">Men</Radio>\n                                <Radio value=\"unisex\">Unisex</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"scentNotes\"\n                            label=\"Scent Notes\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please select item scent notes!',\n                                },\n                            ]}\n                        >\n                            <Select>\n                                <Option value=\"Amber\">Amber</Option>\n                                <Option value=\"Citrus\">Citrus</Option>\n                                <Option value=\"Floral\">Floral</Option>\n                                <Option value=\"Fresh\">Fresh</Option>\n                                <Option value=\"Fruity\">Fruity</Option>\n                                <Option value=\"Oriental\">Oriental</Option>\n                                <Option value=\"Rum\">Rum</Option>\n                                <Option value=\"Spice\">Spice</Option>\n                                <Option value=\"Woody\">Woody</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item name=\"price\" label=\"Price\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input price!',\n                                },\n                            ]}>\n                            <Input type=\"textarea\" />\n                        </Form.Item>\n                        <Form.Item name=\"size\" label=\"Size\" rules={[\n                            {\n                                required: true,\n                                message: 'Please input size!',\n                            },\n                        ]}>\n                            <Input type=\"textarea\" />\n                        </Form.Item>\n                        <Form.Item name=\"imgUrl\" label=\"Image Url\" rules={[\n                            {\n                                required: true,\n                                message: 'Please input Image Url!',\n                            },\n                        ]}>\n                            <Input type=\"textarea\" />\n                        </Form.Item>\n                        <Form.Item name=\"stock\" label=\"Stock\" rules={[\n                            {\n                                required: true,\n                                message: 'Please input stock!',\n                            },\n                        ]}>\n                            <Input type=\"textarea\" />\n                        </Form.Item>\n                        <Form.Item name=\"description\" label=\"Description\" rules={[\n                            {\n                                required: true,\n                                message: 'Please input Description!',\n                            },\n                        ]}>\n                            <Input.TextArea />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n\n            {/* 用户列表 */}\n            <div className=\"user-list\">\n                {/* user信息 */}\n                <h2>User List</h2>\n                {/* list */}\n\n                <Divider></Divider>\n                <Table\n                    // 表头\n                    columns={userColumns}\n                    // 数据\n                    dataSource={userList}\n                    size=\"middle\"\n                    pagination={{ pageSize: 10, size: \"small\" }}\n                />\n            </div>\n        </Content>\n    );\n};\nexport default Admin;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport { Layout, Form, Input, Button, Select, Divider, Table, message } from \"antd\";\nimport { Link } from 'react-router-dom';\nimport { queryOrderList } from \"../../apis/order\";\nimport { formatPrice, getUserInfo, setUserInfo } from \"../../utils\";\n\n\nimport \"./index.css\";\nimport { updateProfile } from \"../../apis/user\";\n\nconst parsePhone = (val = '') => {\n    const regResult = /(\\+\\d{2})\\d+/.exec(val);\n    const prefix = (regResult && regResult[1]) || '';\n    return [prefix, val ? val.replace(prefix, '') : ''];\n};\n\nconst User = () => {\n    const [phonePrefix, setPhonePrefix] = useState('');\n    const [phone, setPhone] = useState('');\n    const [orderList, setOrderList] = useState([]);\n\n    const userInfo = useMemo(() => getUserInfo(), []);\n\n    useEffect(() => {\n        queryOrderList(userInfo.id)\n            .then((res) => {\n                setOrderList(res);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            });\n        const [phonePrefix, phone] = parsePhone(userInfo.phone);\n        setPhonePrefix(phonePrefix);\n        setPhone(phone);\n    }, [userInfo]);\n\n    const handleUpdateProfile = (values) => {\n        const newUserInfo = {\n            ...userInfo,\n            ...values,\n            phone: phonePrefix + phone\n        };\n        updateProfile(newUserInfo)\n            .then((res) => {\n                setUserInfo(newUserInfo);\n                message.success('Success!');\n            })\n            .catch((err) => {\n                message.error(err.message);\n            });\n    };\n\n    const { Content } = Layout;\n    const { Option } = Select;\n    // form type\n    const layout = {\n        labelCol: {\n            span: 7,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    };\n\n    // validate Messages\n    /* eslint-disable no-template-curly-in-string */\n\n    const validateMessages = {\n        required: \"${label} is required!\",\n        types: {\n            email: \"${label} is not a valid email!\",\n            number: \"${label} is not a valid number!\",\n        },\n    };\n    /* eslint-enable no-template-curly-in-string */\n\n    // mobile country number\n    const prefixSelector = (\n        <Form.Item noStyle>\n            <Select value={phonePrefix} onChange={(val) => setPhonePrefix(val)} style={{ width: 100 }}>\n                <Option value=\"+61\">\n                    <div className=\"prefixFlag\">\n                        <img\n                            src=\"https://flagcdn.com/16x12/au.png\"\n                            srcSet=\"https://flagcdn.com/32x24/au.png 2x,https://flagcdn.com/48x36/au.png 3x\"\n                            width=\"16\"\n                            height=\"12\"\n                            alt=\"Austrlia\" />\n                        <span>+61</span>\n                    </div>\n                </Option>\n                <Option value=\"+86\">\n                    <div className=\"prefixFlag\">\n                        <img\n                            src=\"https://flagcdn.com/16x12/cn.png\"\n                            srcSet=\"https://flagcdn.com/32x24/cn.png 2x,https://flagcdn.com/48x36/cn.png 3x\"\n                            width=\"16\"\n                            height=\"12\"\n                            alt=\"China\" />\n                        <span>+86</span>\n                    </div>\n                </Option>\n            </Select>\n        </Form.Item>\n    );\n\n    // form title\n    const columns = [\n        { title: 'Order ID', dataIndex: 'orderId', key: 'orderId' },\n        { title: 'Order Date', dataIndex: 'orderTime', key: 'orderTime' },\n        { title: 'Total', dataIndex: 'totalPrice', key: 'totalPrice' },\n        { title: 'Action', dataIndex: 'orderId', key: 'action', render: (id) => <Link to={`/eval?orderId=${id}`}>Evaluate</Link> },\n    ];\n\n    return (\n        <Content\n            className=\"user-container\"\n            style={{ padding: \"0 50px\", marginTop: 64, minHeight: 700 }}\n        >\n            {/* user info update */}\n            <div className=\"user-profile\">\n                <h2>Profile</h2>\n                <Divider orientation=\"left\">Profile Update</Divider>\n                <Form\n                    {...layout}\n                    className=\"user-form\"\n                    name=\"nest-messages\"\n                    validateMessages={validateMessages}\n                    initialValues={userInfo}\n                    onFinish={handleUpdateProfile}\n                >\n                    {/* User name */}\n                    <Form.Item\n                        name=\"name\"\n                        label=\"User Name\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    {/* Email */}\n                    <Form.Item\n                        name=\"email\"\n                        label=\"Email\"\n                        rules={[\n                            {\n                                type: 'email',\n                                message: 'The input is not valid E-mail!',\n                            },\n                            {\n                                required: true,\n                                message: 'Please input your E-mail!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    {/* mobile num */}\n                    <Form.Item\n                        label=\"Phone Number\"\n                        rules={[{ required: true, message: 'Please input your phone number!' }]}\n                    >\n                        <Input\n                            addonBefore={prefixSelector}\n                            value={phone}\n                            onChange={(e) => {\n                                const { value: val } = e.target;\n                                setPhone(val);\n                            }}\n                            style={{ width: '100%' }} />\n                    </Form.Item>\n\n                    {/* address */}\n                    <Form.Item\n                        name='address'\n                        label=\"Address\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Address!'\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    {/* submit */}\n                    <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 7 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n                <Divider orientation=\"left\">Questionnaire</Divider>\n                <Link to='/questionaire'>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: 30 }}>\n                        Update / Fill in the Questionnaire\n                    </Button>\n                </Link>\n\n\n            </div>\n\n            {/* user oder */}\n            <div className=\"user-order\">\n                <h2>Order List</h2>\n\n                {/* 进展中的订单 */}\n                {/* <Divider orientation=\"left\">In-progress Orders</Divider>\n                <Table\n                    // 表头\n                    columns={columns}\n                    // 数据\n                    dataSource={orderList.map((orderItem) => ({\n                        ...orderItem,\n                        key: orderItem.orderId,\n                        orderTime: new Date(orderItem.orderTime).toLocaleString(),\n                        totalPrice: 'AU$' + formatPrice(orderItem.totalPrice)\n                    }))}\n                    size=\"middle\"\n                    pagination={{ pageSize: 3, size: \"small\" }}\n                /> */}\n\n\n                {/* 完成的订单 */}\n                {/* <Divider orientation=\"left\">Completed Orders</Divider> */}\n\n                <Table\n                    // 表头\n                    columns={columns}\n                    // 数据\n                    dataSource={orderList.map((orderItem) => ({\n                        ...orderItem,\n                        key: orderItem.orderId,\n                        orderTime: new Date(orderItem.orderTime).toLocaleString(),\n                        totalPrice: 'AU$' + formatPrice(orderItem.totalPrice)\n                    }))}\n                    size=\"middle\"\n                    pagination={{ pageSize: 8, size: \"small\" }}\n                />\n\n            </div>\n\n        </Content>\n    );\n}\n\nexport default User;","import qs from 'querystring';\nimport { request, handleReturnResult } from './base';\n//order api\nexport const queryOrderByProductId = (productId) => request.get('/order/viewByProductId', {\n\tparams: {\n\t\tproduct_id: productId\n\t}\n}).then(handleReturnResult);\n\nexport const queryOrderById = (orderId) => request.get('/order/viewById', {\n\tparams: {\n\t\torder_id: orderId\n\t}\n}).then(handleReturnResult);\n\nexport const queryOrderList = (userId) => request.get('/order/view', {\n\tparams: {\n\t\tuser_id: userId\n\t}\n}).then(handleReturnResult);\n\nexport const checkout = (userId, products, amount) => request.post('/order/checkout', qs.stringify({\n\tuserId,\n\t...products,\n\tamount\n})).then(handleReturnResult);","import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Card, Image, Checkbox, Button, InputNumber, message } from 'antd';\n\nimport { deleteShoppingCart, updateQuantity, viewShoppingCart } from '../../apis/shoppingCart';\nimport { formatPrice, getUserInfo } from '../../utils';\n\nimport './index.css';\n\nconst Cart = () => {\n    const history = useHistory();\n    const [cartItems, setCartItems] = useState([]);\n\n    const fetchItems = useCallback(() => {\n        const userInfo = getUserInfo();\n        if (!userInfo) {\n            history.push('/login');\n            return;\n        }\n        return viewShoppingCart(userInfo.id)\n        .then((cartItems) => {\n            setCartItems(cartItems.map((item) => ({\n                ...item,\n                checked: true\n            })));\n        })\n        .catch((err) => {\n            message.error(err.message);\n        });\n\n    }, [history]);\n\n    const handleQuantityChange = (productId, quantity) => {\n        const userInfo = getUserInfo();\n        if (!userInfo) {\n            history.push('/login');\n            return;\n        }\n        const promise = (quantity === 0) ? deleteShoppingCart(userInfo.id, productId) : updateQuantity(userInfo.id, productId, quantity);\n        promise.then(() => {\n            fetchItems();\n        })\n        .catch((err) => {\n            message.error(err.message)\n        });\n    };\n\n    const handleCheckout = () => {\n        history.push(`/checkout?itemList=${\n            encodeURIComponent(\n                JSON.stringify(\n                    cartItems.map(\n                        (cartItem) => (cartItem.checked ? {\n                            id: cartItem.product.id,\n                            name: cartItem.product.name,\n                            price: cartItem.product.price,\n                            quantity: cartItem.quantity\n                        } : null)\n                    ).filter(v => v)\n                )\n            )\n        }`);\n    };\n\n    const totalPrice = useMemo(() => {\n        return cartItems.reduce((sum, cartItem) => {\n            return sum + (cartItem.product.price * (cartItem.quantity || 1));\n        }, 0);\n    }, [cartItems]);\n\n    useEffect(() => {\n        fetchItems();\n    }, [fetchItems]);\n\n    return (\n        <div id=\"cart-page\">\n            <Card id=\"cart-box\">\n                <h1 id=\"head\">Cart</h1>\n                {cartItems.length ? <div id=\"cart-box-body\">\n                    {cartItems.map((cartItem, i) => <div className=\"checkout-1\">\n                        <div className=\"item-1\">\n                            <Checkbox checked={cartItem.checked} onChange={(e) => {\n                                const { checked } = e.target;\n                                const newCartItems = [\n                                    ...cartItems\n                                ];\n                                newCartItems[i].checked = checked;\n                                setCartItems(newCartItems);\n                            }}>\n                                <Image\n                                    width={80}\n                                    src={cartItem.product.imgUrl}\n                                />\n                            </Checkbox>\n                        </div>\n                        <Link className=\"item-2\" to={`/itemInfo?id=${cartItem.product.id}`}>\n                            <span className=\"itemName\">{cartItem.product.name}</span>\n                            <span>Size: {cartItem.product.size}ml</span>\n                        </Link>\n                        <div className=\"item-3\">\n                            <span className=\"price\">\n                                <small>AU$</small>{formatPrice(cartItem.product.price)}\n                            </span>\n                            <span style={{ margin: 10 }}> x </span>\n                            <InputNumber min={0} value={cartItem.quantity} onChange={(val) => handleQuantityChange(cartItem.product.id, val)} />\n                        </div>\n                    </div>)}\n                    <div className=\"checkout-2\">\n                        <div></div>\n                        <div></div>\n                        <h1>Total:</h1>\n                        <div className=\"total-price\"><small>AU$</small>{formatPrice(totalPrice)}</div>\n                    </div>\n                    <div className=\"checkout-3\">\n                        <div></div>\n                        <div>\n                            <Link to=\"/\" className=\"skip\">\n                                <Button id=\"skip-btn\">Back</Button>\n                            </Link>\n                        </div>\n                        <div></div>\n                        <div>\n                            <Button\n                                id=\"checkout-button\"\n                                type=\"primary\"\n                                onClick={() => handleCheckout()}\n                            >\n                                Check out\n                            </Button>\n                        </div>\n\n                    </div>\n                </div> : \n                <div id=\"cart-box-body-empty\">\n                    <span className=\"cart-empty-text\">\n                            There is no items.\n                    </span>\n                    <Link to=\"/\" className=\"skip\">\n                        <Button id=\"skip-btn\">Back to Home</Button>\n                    </Link>\n                </div>}\n            </Card>\n        </div>\n    )\n};\n\n\nexport default Cart;","import qs from 'querystring';\nimport { request, handleReturnResult } from './base';\n// questionary api\nexport const viewShoppingCart = (userId) => request.get('/shoppingCart/view', {\n\tparams: {\n\t\tid: userId\n\t}\n}).then(handleReturnResult);\n\nexport const updateQuantity = (userId, productId, quantity) => request.post('/shoppingCart/quantity', qs.stringify({\n\tuser_id: userId,\n\tquantity,\n\tproduct_id: productId\n})).then(handleReturnResult);\n\nexport const addShoppingCart = (userId, productId, quantity) => request.post('/shoppingCart/add', qs.stringify({\n\tuser_id: userId,\n\tquantity,\n\tproduct_id: productId\n})).then(handleReturnResult);\n\nexport const deleteShoppingCart = (userId, productId) => request.post('/shoppingCart/delete', qs.stringify({\n\tuser_id: userId,\n\tproduct_id: productId\n})).then(handleReturnResult);\n","import React, { useState, useEffect } from 'react';\nimport {\n    Link,\n    useHistory\n} from 'react-router-dom';\nimport { Button, Form, Typography, Radio, InputNumber, Space,Divider, Row, Col, Spin, message } from 'antd';\nimport { getQuestionaire, submitQuestionaire, updateQuestionaire } from '../../apis/user';\nimport { getUserInfo } from '../../utils';\n\nimport './index.css';\n\nconst { Title } = Typography;\n\nconst Questionaire = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [questionaire, setQuestionaire] = useState({\n        'price': {\n            lower: 1,\n            upper: 1000\n        }\n    });\n\n\tconst history = useHistory();\n    const onFinish = async (values) => {\n        const userInfo = getUserInfo();\n        if (!userInfo || !userInfo.id) {\n            message.error('You must be logined!');\n            return;\n        }\n        console.log('Questionaire values', values);\n        try {\n            const submitFn = questionaire.forwho ? updateQuestionaire : submitQuestionaire;\n            await submitFn({\n                userid: userInfo.id,\n                family: values.family,\n                forwho: values.forwho,\n                brand: values.brand,\n                lowerprice: values.price.lower,\n                higherprice: values.price.upper\n            });\n            history.push('/');\n        } catch (error) {\n            message.error(`Error: ${error.message}`)\n        }\n    };\n\n    useEffect(() => {\n        const userInfo = getUserInfo();\n        if (!userInfo) {\n            history.push('/login');\n            return;\n        }\n        setIsLoading(true);\n        getQuestionaire(userInfo.id)\n        .then((questionaire) => {\n            if (questionaire) {\n                setQuestionaire({\n                    family: questionaire.family,\n                    forwho: questionaire.forwho,\n                    brand: questionaire.brand,\n                    price: {\n                        upper: questionaire.higherprice,\n                        lower: questionaire.lowerprice\n                    }\n                });\n            }\n            setIsLoading(false);\n        })\n        .catch((err) => {\n            message.error(err.message);\n            setIsLoading(false);\n        });\n    }, [history]);\n\n    if (isLoading) {\n        return (\n            <div id=\"quest-page\">\n                <Spin />\n            </div>\n        );\n    }\n\n    return (\n        <div id=\"quest-page\">\n            <Title>Welcome to UD fragrance !</Title>\n            <Title level={4}>Please fill the questionaire, then it will generate your stylish frangrance </Title>\n            <Divider />\n            <Form\n                name=\"basic\"\n                layout=\"vertical\"\n                labelCol={{\n                    span: 10,\n                }}\n                wrapperCol={{\n                    span: 20,\n                }}\n                onFinish={onFinish}\n                initialValues={questionaire}\n                autoComplete=\"off\"\n                style={{\n                    width: '100%',\n                    marginTop: 20\n                }}\n            >\n                <Form.Item\n                    label=\"Who will use it?\"\n                    name=\"forwho\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'This quesition is required!',\n                        },\n                    ]}\n                >\n                    <Radio.Group>\n                        {/* <Radio value=\"you\">you</Radio> */}\n                        <Radio value=\"her\">her</Radio>\n                        <Radio value=\"him\">him</Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"What frangrance family you would like?\"\n                    name=\"family\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'This quesition is required!',\n                        },\n                    ]}\n                >\n                    <Radio.Group>\n                        <Radio value=\"Floral\">Floral</Radio>\n                        <Radio value=\"Amber\">Amber</Radio>\n                        <Radio value=\"Woody\">Woody</Radio>\n                        <Radio value=\"Fresh\">Fresh</Radio>\n                        <Radio value=\"Fruity\">Fruity</Radio>\n                        <Radio value=\"Oriental\">Oriental</Radio>\n                        <Radio value=\"Rum\">Rum</Radio>\n                        <Radio value=\"Spice\">Spice</Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Which of the following brands do you like or are familiar with?\"\n                    name=\"brand\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'This quesition is required!',\n                        },\n                    ]}\n                >\n                    <Radio.Group>\n                        <Row>\n                            <Col span={8}><Radio value=\"BVLGARI\">BVLGARI</Radio></Col>\n                            <Col span={8}><Radio value=\"Chanel\">Chanel</Radio></Col>\n                            <Col span={8}><Radio value=\"Creed\">Creed</Radio></Col>\n                            <Col span={8}><Radio value=\"Calvin Klein\">Calvin Klein</Radio></Col>\n                            <Col span={8}><Radio value=\"Gucci\">Gucci</Radio></Col>\n                            <Col span={8}><Radio value=\"Guerlain\">Guerlain</Radio></Col>\n                            <Col span={8}><Radio value=\"HERMAS\">HERMAS</Radio></Col>\n                            <Col span={8}><Radio value=\"Tom Ford\">Tom Ford</Radio></Col>\n                        </Row>\n                    </Radio.Group>\n                </Form.Item>\n                <Form.Item\n                    label=\"Your budget range is?\"\n                    required\n                >\n                    <Space>\n                        <span>From</span>\n                        <Form.Item\n                            name={['price', 'lower']}\n                            noStyle\n                            rules={[{ required: true, message: 'This quesition is required!' }]}\n                        >\n                            <InputNumber />\n                        </Form.Item>\n                        <span>to</span>\n                        <Form.Item\n                            name={['price', 'upper']}\n                            noStyle\n                            rules={[{ required: true, message: 'This quesition is required!' }]}\n                        >\n                            <InputNumber />\n                        </Form.Item>\n                    </Space>\n                </Form.Item>\n\n                <Form.Item\n                    wrapperCol={{\n                        offset: 10,\n                        span: 16,\n                    }}\n                >\n                    <div id=\"quest-btn-wrapper\">\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                        >\n                            Submit\n                        </Button>\n                        <Link to=\"/\" className=\"skip\">\n                            <Button type=\"link\">Skip</Button>\n                        </Link>\n                    </div>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n}\n\nexport default Questionaire;\n","import qs from 'querystring';\nimport { request, handleReturnResult } from './base';\n\nexport const viewCommentByProductId = (productId) => request.get('/comment/viewByProduct', {\n\tparams: {\n\t\tproduct_id: productId\n\t}\n}).then(handleReturnResult);\n\nexport const addOrUpdateComment = (orderId, productId, stars, comment) => request.post('/comment/addOrUpdate', qs.stringify({\n\torder_id: orderId,\n\tproduct_id: productId,\n\tstars,\n\tcomment\n})).then(handleReturnResult);","import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport qs from 'querystring';\nimport moment from 'moment';\nimport { Layout, Breadcrumb, Image, InputNumber, Button, Rate, Card, Comment, Tooltip, List, Spin, message } from 'antd';\nimport { queryItems } from '../../apis/product';\nimport { viewCommentByProductId } from '../../apis/comment';\nimport { addShoppingCart } from '../../apis/shoppingCart';\nimport { formatPrice, getUserInfo } from '../../utils';\n\nimport './index.css';\n\nconst { Content } = Layout;\n\nconst ItemInfo = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const parsedQuery = qs.parse(location.search.replace('?', ''));\n    const itemId = parsedQuery && parsedQuery.id;\n    const [itemData, setItemData] = useState(null);\n    const [itemComments, setItemComments] = useState([]);\n    const [quantity, setQuantity] = useState(1);\n\n    const handleAddCart = () => {\n        const userInfo = getUserInfo();\n        if (!userInfo) {\n            history.push('/login');\n            return;\n        }\n        addShoppingCart(userInfo.id, itemId, quantity)\n        .then(() => {\n            setQuantity(1);\n            history.push('/cart');\n        })\n        .catch((err) => {\n            message.error(err.message);\n        });\n    };\n\n    const handleCheckOut = () => {\n        history.push(`/checkout?itemList=${encodeURIComponent(JSON.stringify([{\n            id: itemData.id,\n            name: itemData.name,\n            price: itemData.price,\n            quantity\n        }]))}`);\n    };\n\n    useEffect(() => {\n        if (itemId) {\n            Promise.all([\n                queryItems({\n                    id: itemId\n                }),\n                viewCommentByProductId(itemId)\n            ])\n            .then(([[res], comments]) => {\n                setItemData(res);\n                setItemComments(comments);\n            })\n            .catch((err) => {\n                console.error(err);\n                message.error(`Query Error: ${err.message}`);\n            })\n        }\n    }, [itemId]);\n\n    if (!itemId) {\n        return <Content style={{ marginTop: \"64px\", padding: '0 50px', minHeight: \"100vh\" }}>\n            <h1>Error: no itemId by router</h1>\n        </Content>;\n    }\n\n    if (!itemData) {\n        return <Content style={{ marginTop: \"64px\", padding: '0 50px', minHeight: \"100vh\", display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <Spin />\n        </Content>;\n    }\n\n    // average star\n    const starArr = itemComments.map((commentItem) => (commentItem.stars)).filter(v => v);\n    const starSum = starArr.reduce((sum, curVal) => sum+curVal, 0);\n    const starAvg = starSum / starArr.length;\n\n    // comment content\n    const data = itemComments.map((commentItem) => (commentItem && commentItem.comment && commentItem.stars ? {\n        author: commentItem.user.name,\n        avatar: 'https://joeschmoe.io/api/v1/random',\n        content: (\n            <p>{commentItem.comment}</p>\n        ),\n        datetime: (\n            <Tooltip title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                <span>{moment().subtract(1, 'days').fromNow()}</span>\n            </Tooltip>\n        )\n    } : null)).filter(v => v);\n\n    return (\n        <Content style={{ padding: '0 50px', minHeight: \"100vh\" }}>\n            {/* 标签位置 */}\n            <Breadcrumb style={{ margin: '16px 0' }}>\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\n                <Breadcrumb.Item>Products</Breadcrumb.Item>\n                <Breadcrumb.Item>item</Breadcrumb.Item>\n            </Breadcrumb>\n\n            <div className=\"item-contanier\">\n                {/* A part - img + basicinfo + price */}\n                <div className=\"top-container\">\n                    {/* Image */}\n                    <div className=\"item-img\">\n                        <Image\n                            width={250}\n                            src={itemData.imgUrl}\n                        />\n                    </div>\n\n                    {/* basicinfo */}\n                    <div className=\"basicinfo\">\n                        <p className=\"item-name\">{itemData.name}</p>\n                        <h3>Brand: {itemData.brand} </h3>\n                        <p>Size: {itemData.size}ml </p>\n\n                        {/* star */}\n                        <Rate disabled value={starAvg} /> \n                        {/* sales */}\n                        <span className=\"sales\"> ({itemData.saleNum.toLocaleString('en-US')} sold) </span>\n\n                        <div className=\"price\">\n                            AU${formatPrice(itemData.price)}\n                        </div>\n\n                        {/* number */}\n                        <div className=\"quantity\">\n                            <span>Quantity: </span>\n                            <InputNumber min={1} max={1000} value={quantity} onChange={(val) => setQuantity(val)} />\n                            {\n                                quantity <= itemData.stock\n                                ? <span style={{margin:\"10px 10px\", color:'#90be6d'}}> (Available in Stock!) </span>\n                                : <span style={{margin:\"10px 10px\", color:'#FF5000'}}> (Out Stock!) </span>\n                            }\n                        </div>\n\n                        <Button type=\"primary\" style={{ margin: '10px 10px 10px 0' }} onClick={() => handleAddCart()}>Add to Cart</Button>\n                        <Button type=\"primary\" onClick={() => handleCheckOut()}>Buy Now</Button>\n\n                    </div>\n\n                </div>\n\n\n                {/* B part - description + comments*/}\n\n                <div className=\"bottom-container\">\n                    {/* descroption*/}\n                    <div className=\"description\">\n\n                        <Card title=\"Description\" bordered={false} className=\"card\" style={{ fontSize: \"15px\" }}>\n                            <p><b>Scent Note:</b> {itemData.scentNotes}</p>\n                            <p><b>Grender:</b> {itemData.gender}</p>\n                            <p>{itemData.description}</p>\n                        </Card>\n\n                    </div>\n\n                    {/* comment */}\n                    <div className=\"comments\">\n                        <List\n                            className=\"comment-list\"\n                            header={`${data.length} replies`}\n                            itemLayout=\"horizontal\"\n                            dataSource={data}\n                            renderItem={item => (\n                                <li>\n                                    <Comment\n                                        actions={item.actions}\n                                        author={item.author}\n                                        avatar={item.avatar}\n                                        content={item.content}\n                                        datetime={item.datetime}\n                                    />\n                                </li>\n                            )}\n                        />\n                    </div>\n                </div>\n            </div>\n        </Content>\n    )\n};\n\nexport default ItemInfo;\n","import React, { useState, useEffect } from 'react';\nimport { Space, Card, Form, Input, Button, message, Pagination, Spin } from 'antd';\n\nimport Item from '../Item';\nimport { queryItems } from '../../apis/product';\nimport { safeParseJSON } from \"../../utils\";\n\nimport './index.css';\n\nconst SearchList = ({\n  keyword\n}) => {\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(10);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchResult, setSearchResult] = useState([]);\n\n  const userInfo = safeParseJSON(window.localStorage.getItem(\"loginState\"));\n\n  useEffect(() => {\n    if (!keyword) {\n      return;\n    }\n\n    setIsLoading(true);\n    return queryItems({\n      name: keyword\n    }).then((res) => {\n      setSearchResult(res);\n      setIsLoading(false);\n    })\n      .catch((err) => {\n        console.error(err);\n        message.error((err && err.message) || 'Unknown error');\n        setIsLoading(false);\n      });\n  }, [keyword])\n\n  const handleChange = (value) => {\n    if (value <= 1) {\n      setMin(0);\n      setMax(10);\n    } else {\n      setMin((value - 1) * 10);\n      setMax((value - 1) * 10 + 10);\n    }\n  };\n\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n    message.success(\"Thanks for request!\");\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"search-item\">\n        <Space size=\"large\" wrap>\n          <Spin />\n        </Space>\n      </div>\n    );\n  }\n\n  // search result\n  if (Array.isArray(searchResult) && searchResult.length !== 0) {\n    return (\n      <div className=\"search-item\">\n        <Space size=\"large\" wrap>\n          {searchResult.slice(min, max).map((itemData) => <Item itemData={itemData} key={'SearchList-' + itemData.id} />)}\n        </Space>\n        <Pagination\n          defaultCurrent={1}\n          defaultPageSize={10}\n          onChange={handleChange}\n          total={searchResult.length}\n          style={{ textAlign: \"center\", marginTop: 10, marginLeft: \"-80px\" }}\n        />\n      </div>\n    );\n  } else {\n    if (userInfo) {\n      // no search result\n      return (\n        <div className=\"empty\">\n          <h2>We don’t have anything that matches your query </h2>\n          <h3>\n            Check your spelling and try again or use a more general search term.\n          </h3>\n          <h3>\n            Or, send a<a href=\"/#\"> request form </a>\n            to us.\n          </h3>\n          {/* request form */}\n          <Card\n            title=\"Request Form\"\n            style={{ width: 500, margin: \"40px 500px 40px auto\" }}\n          >\n            <Form\n              name=\"basic\"\n              labelCol={{ span: 6 }}\n              wrapperCol={{ span: 12 }}\n              initialValues={{ remember: true }}\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n              autoComplete=\"off\"\n            >\n              <Form.Item\n                label=\"Item name\"\n                name=\"Item\"\n                rules={[\n                  { required: true, message: \"Please input a item name!\" },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label=\"Brand name\"\n                name=\"brand\"\n                rules={[{ required: true, message: \"Please input a brand!\" }]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item wrapperCol={{ offset: 6, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </Card>\n        </div>\n      );\n\n    }else{\n      return(\n        <div className=\"empty\">\n          <h2>We don’t have anything that matches your query </h2>\n          <h3>\n            Check your spelling and try again or use a more general search term.\n          </h3>\n        </div>\n      )\n    }\n  }\n};\n\nexport default SearchList;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Layout, Breadcrumb } from 'antd';\nimport qs from 'querystring';\nimport SearchList from '../../components/SearchList';\n\nconst { Content } = Layout;\n\nconst Search = () => {\n    const location = useLocation();\n    const parsedQuery = qs.parse(location.search.replace('?', ''));\n\n    console.log('location', location);\n    console.log('parsedQuery', parsedQuery);\n\n    return (\n        <Content style={{ marginTop: \"64px\", padding: '0 50px', minHeight: \"720px\" }}>\n            {/* tag location */}\n            <Breadcrumb style={{ margin: '16px 0' }}>\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\n                <Breadcrumb.Item>Search</Breadcrumb.Item>\n            </Breadcrumb>\n            {/* search result */}\n            <SearchList keyword={parsedQuery.keyword} />\n        </Content>\n\n    );\n};\n\nexport default Search;\n","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { Layout, Card, Form, Input, Button, Divider, Collapse, message } from 'antd';\nimport qs from 'querystring';\nimport { formatPrice, getUserInfo, safeParseJSON } from '../../utils';\n\nimport './index.css';\nimport { checkout } from '../../apis/order';\n\nconst { Content } = Layout;\nconst Checkout = () => {\n    const userInfo = getUserInfo();\n    const location = useLocation();\n    const history = useHistory();\n    const productList = useMemo(() => {\n        const { itemList } = qs.parse(location.search.replace('?', ''));\n        return safeParseJSON(itemList);\n    }, [location]);\n\n    const totalPrice = useMemo(() => {\n        return productList.reduce((sum, productItem) => {\n            return sum + (productItem.price * productItem.quantity);\n        }, 0);\n    }, [productList]);\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n    }, [userInfo, history]);\n\n    useEffect(() => {\n        if (!Array.isArray(productList) || !productList.length) {\n            message.error('Bad request');\n            history.push('/');\n        }\n    }, [productList, history]);\n\n    const { Panel } = Collapse;\n\n    const onSaveShipInfo = (values) => {\n        console.log('Success:', values);\n    };\n\n    const onCheckOut = (values) => {\n        console.log('Success:', values);\n        checkout(userInfo.id, productList.reduce((map, productItem, i) => {\n            map[`products[${i}].product_id`] = productItem.id;\n            map[`products[${i}].price`] = productItem.price;\n            map[`products[${i}].quantity`] = productItem.quantity;\n            return map;\n        }, {}), totalPrice)\n        .then((res) => {\n            console.log('checkout', res);\n            history.push('/eval');\n        })\n        .catch((err) => {\n            message.error(err.message);\n        });\n    };\n\n\n    return (\n        <Content style={{ padding: '0 50px', minHeight: \"95vh\" }}>\n            \n            <h1 id=\"title\">Check Out</h1>\n\n            <div className=\"checkout-container\">\n                {/* shipping info */}\n                <div className=\"shipping\">\n                    <Card title=\"Ship to\" bordered={false}>\n                        <p>Please fill in your shipping information</p>\n                        <Form\n                            name=\"shipping\"\n                            wrapperCol={{ span: 20 }}\n                            onFinish={onSaveShipInfo}\n                            autoComplete=\"off\"\n                            initialValues={userInfo}\n                        >\n                            <Form.Item\n                                name=\"name\"\n                                required\n                                rules={[{ required: true, message: 'Please input your full name!' }]}\n                            >\n                                <Input placeholder=\"Full name\" />\n                            </Form.Item>\n\n                            <Form.Item\n                                name=\"phone\"\n                                required\n                                rules={[{ required: true, message: 'Please input your Phone!' }]}\n                            >\n                                <Input placeholder=\"Phone\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"email\"\n                                required\n                                rules={[{ required: true, message: 'Please input your Email!' }]}\n                            >\n                                <Input placeholder=\"Email\" />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"address\"\n                                required\n                                rules={[{ required: true, message: 'Please input your Address!' }]}\n                            >\n                                <Input placeholder=\"Address\" />\n                            </Form.Item>\n                        </Form>\n                    </Card>\n\n                    {/* checkout */}\n                    <Card title=\"Pay with\" bordered={false}>\n                        <Collapse defaultActiveKey={['1']}>\n                            <Panel showArrow={false} header=\"Debit or credit card\" key=\"1\">\n                                {/* <p>{text}</p> */}\n                                <Form\n                                    name=\"debit-card\"\n                                    wrapperCol={{ offset: 1, span: 20 }}\n                                    onFinish={onCheckOut}\n                                    autoComplete=\"off\"\n                                >\n                                    <Form.Item\n                                        rules={[{ required: true, message: 'Please input your full name!' }]}\n                                    >\n                                        <Input placeholder=\"Card Holder name\" />\n                                    </Form.Item>\n\n                                    <Form.Item\n                                        rules={[{ required: true, message: 'Please input your Phone!' }]}\n                                    >\n                                        <Input placeholder=\"Card number\" />\n                                    </Form.Item>\n                                    <Form.Item\n                                        rules={[{ required: true, message: 'Please input your Email!' }]}\n                                    >\n                                        <Input placeholder=\"Expriy MM/YYYY\" style={{ width: \"46%\", marginRight: 10 }} />\n                                        <Input placeholder=\"Security code\" style={{ width: \"51%\" }} />\n                                    </Form.Item>\n                                </Form>\n                                <Button type=\"primary\" block style={{ marginTop: 20 }} onClick={onCheckOut} >\n                                    Place Order\n                                </Button>\n                            </Panel>\n                            <Panel showArrow={false} header=\"PayPal\" key=\"2\">\n                                <Link to=\"/eval\">\n                                    <Button type=\"primary\" htmlType=\"submit\" block style={{ marginTop: 20 }} >\n                                        Place Order\n                                    </Button>\n                                </Link>\n\n                            </Panel>\n                            {/* <Checkbox onChange={onChange}>PayPal</Checkbox> */}\n                            {/* <Checkbox onChange={onChange}>Gift card</Checkbox> */}\n                        </Collapse>\n                        {/* <Checkbox onChange={onChange} defaultChecked style={{ marginBottom: 20 }}>Debit or credit card</Checkbox> */}\n                    </Card>\n                </div>\n                {/* Order Summay */}\n                <div className=\"Order\">\n                    <Card title=\"Order Summay\" bordered={false}>\n                        <div className=\"order-summary\">\n                            {productList.map((productItem) => (\n                                <div className=\"order-summary-item\">\n                                    <span className=\"order-info\">Item name: <Link to={`/itemInfo?id=${productItem.id}`}>{productItem.name}</Link></span>\n                                    <span className=\"order-info\">Quantity: {productItem.quantity}</span>\n                                    <span className=\"order-info\">Price: AU${formatPrice(productItem.price)}</span>\n                                    <Divider />\n                                </div>\n                            ))}\n                            <p style={{color:\"#ff0a54\"}}>Total: AU${formatPrice(totalPrice)}</p>\n                        </div>\n                        <Link to='/cart'>\n                            <Button block>\n                                Back to Cart\n                            </Button>\n                        </Link>\n                    </Card>\n                </div>\n            </div>\n        </Content>\n    )\n}\nexport default Checkout;\n","import React, { useState, useEffect } from 'react'\nimport { Layout, Card, Form, Input, Button,Table,message } from \"antd\";\nimport { DeleteOutlined}  from '@ant-design/icons';\nimport { queryUserList, register } from '../../apis/user';\nimport \"./index.css\";\n\n\nconst AdminManage = () => {\n\n    const { Content } = Layout;\n\n    const [adminDataSource, setAdminDataSource] = useState([]);\n\n    const onFinish = (values) => {\n        console.log(values)\n        const { adminname, email, password, confirmPassword } = values;\n\n        if (password !== confirmPassword) {\n\t\t\tmessage.error('password and confirm-password is not same!');\n\t\t\treturn;\n\t\t}\n        // add form\n\n\n        return register({\n            name: adminname,\n            email,\n            password,\n            role:1\n        })\n        .then((res) => {\n            // setUserInfo(res);\n            const newRecord = {\n                key: adminDataSource.length + 1,\n                adminID: 56332998,\n                adminName: values.adminname,\n                email: values.email,\n            }\n    \n            setAdminDataSource(pre=>{\n                return [...pre,newRecord]\n            })\n        })\n        .catch((err) => {\n            console.error(err);\n            message.error((err && err.message) || 'Unknown error');\n        });\n        \n    }\n\n    const admincolumns = [\n        {\n            title: \"Admin ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n        },\n        {\n            title: \"Admin Name\",\n            dataIndex: \"name\",\n            key: \"name\",\n        },\n        {\n            title: \"Email\",\n            dataIndex: \"email\",\n            key: \"email\",\n        },\n        {\n            title: \"Action\",\n            key: \"action\",\n            render: (record) => (\n                <DeleteOutlined onClick={()=>{onDeleteRecord(record)}} style={{marginLeft:\"30%\"}}/>\n            )\n        }\n    ];\n    const onDeleteRecord = (record) =>{\n        setAdminDataSource(pre => {\n            return pre.filter(item => item.key !== record.key)\n        })\n    };\n\n    useEffect(() => {\n        queryUserList()\n            .then((userList) => {\n                setAdminDataSource(userList.map((user) => ({\n                    ...user,\n                    key: `user-${user.id}`\n                })).filter((user) => user.role <= 1));\n            })\n            .catch((err) => {\n                message.error(err.message);\n            });\n    }, []);\n\n    return (\n        <Content style={{ padding: '0 50px', minHeight: \"95vh\" }}>\n            <div className=\"admin-container\">\n                {/* add new admin */}\n                <div className=\"add-admin\">\n                    <Card title=\"Add a New Admin\">\n\n                        <Form\n                            name=\"basic\"\n                            labelCol={{\n                                span: 8,\n                            }}\n                            wrapperCol={{\n                                span: 14,\n                            }}\n                            onFinish={onFinish}\n                        >\n                            <Form.Item\n                                label=\"Admin Name\"\n                                name=\"adminname\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input username!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"E-Mail\"\n                                name=\"email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your e-mail!',\n                                    },\n                                ]}\n                            >\n                                <Input type=\"email\" />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Password\"\n                                name=\"password\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input password!',\n                                    },\n                                ]}\n                            >\n                                <Input.Password />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Confirm Password\"\n                                name=\"confirmPassword\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your confirm password!',\n                                    },\n                                ]}\n                            >\n                                <Input.Password />\n                            </Form.Item>\n\n                            <Form.Item\n                                wrapperCol={{\n                                    offset: 6,\n                                    span: 14,\n                                }}\n                            >\n                                <Button\n                                    id=\"login-button\"\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                >\n                                    Add\n                                </Button>\n                            </Form.Item>\n\n                        </Form>\n                    </Card>\n\n                </div>\n\n                <div className=\"delete-admin\">\n                    <h2>Admin List</h2>\n                    <Table\n                        // header\n                        columns={admincolumns}\n                        // data\n                        dataSource={adminDataSource}\n                        size=\"middle\"\n                        pagination={{ pageSize: 10, size: \"small\" }}\n                        id = \"admin-table\"\n                    />\n                </div>\n            </div>\n        </Content>\n    )\n\n}\n\nexport default AdminManage;","import React, { useEffect, useState } from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { Button, Layout, Space, Image, Rate, Input, Card, message } from 'antd';\r\nimport qs from 'querystring';\r\nimport { HeartFilled } from '@ant-design/icons';\r\nimport { queryItems } from '../../apis/product';\r\nimport { queryOrderById } from '../../apis/order';\r\n\r\nimport './index.css';\r\nimport { addOrUpdateComment } from '../../apis/comment';\r\n\r\nconst {Content} = Layout;\r\nconst {TextArea} = Input;\r\n\r\nconst Evaluation = () => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const parsedQuery = qs.parse(location.search.replace('?', ''));\r\n    const orderId = parsedQuery && parsedQuery.orderId;\r\n\r\n    const [commentList, setCommentList] = useState(null);\r\n\r\n    const handleChangeField = (i, key, val) => {\r\n        const newList = [\r\n            ...commentList\r\n        ];\r\n        newList[i][key] = val;\r\n        setCommentList(newList);\r\n    };\r\n\r\n    const handleSubmitComment = () => {\r\n        for (const commentItem of commentList) {\r\n            if (!commentItem.stars || !commentItem.comment) {\r\n                continue;\r\n            }\r\n            addOrUpdateComment(orderId, commentItem.productid, commentItem.stars, commentItem.comment)\r\n            .then(() => {\r\n                message.success('Success!');\r\n                history.push('/user');\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!orderId) {\r\n            history.push('/');\r\n            return;\r\n        }\r\n        queryOrderById(orderId)\r\n        .then((res) => {\r\n            console.log(res);\r\n            if (!res || !Array.isArray(res.orderdetail)) {\r\n                throw new Error('Invalid response');\r\n            }\r\n            return Promise.all(\r\n                res.orderdetail.map(\r\n                    (commentItem) => queryItems({\r\n                        id: commentItem.productid\r\n                    }).then(([productItem]) => ({\r\n                        ...commentItem,\r\n                        name: productItem.name,\r\n                        imgUrl: productItem.imgUrl\r\n                    }))\r\n                )\r\n            );\r\n        })\r\n        .then((commentList) => setCommentList(commentList))\r\n        .catch((err) => {\r\n            message.error(err.message);\r\n        });\r\n    }, [orderId, history]);\r\n\r\n    return (\r\n        <Content style={{ padding: '0 50px', minHeight: \"720px\" }}>\r\n            \r\n            <h1 id=\"title\">How's your shopping experience?</h1>\r\n            <div className=\"eval-box\">\r\n                <Card title=\"Evaluation\" bordered={false}>\r\n                    <div className=\"eval-area\">\r\n                        {Array.isArray(commentList) ? commentList.map((productItem, i) => <div key={`comment-${productItem.id}`}>\r\n                            <Image\r\n                                width={80}\r\n                                src={productItem.imgUrl}\r\n                            />\r\n                            <div className=\"eval-info-block\">\r\n                                <span>{productItem.name} x {productItem.quantity}</span>\r\n                                <Rate character={ <HeartFilled /> } value={productItem.stars} onChange={(val) => handleChangeField(i, 'stars', val)} />\r\n                            </div>\r\n                            <TextArea placeholder=\"Comment\" value={productItem.comment} onChange={(e) => handleChangeField(i, 'comment', e.target.value)} style={{ marginLeft: 10 }} />\r\n                        </div>) : null}\r\n                    </div>\r\n                </Card>\r\n                <div className=\"bot-area\">\r\n                    <Space size={40}>\r\n                        <Button type=\"primary\" onClick={handleSubmitComment}>Submit</Button>\r\n                        <Link to=\"/\">\r\n                            <Button>Not this time</Button>\r\n                        </Link>\r\n                    </Space>\r\n                </div>\r\n            </div>\r\n        </Content>\r\n\r\n    )\r\n};\r\n\r\nexport default Evaluation;\r\n","import React, { useState, useEffect, Fragment } from 'react';\nimport qs from 'querystring';\nimport moment from 'moment';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { queryItems } from '../../apis/product';\nimport { viewCommentByProductId } from '../../apis/comment';\nimport { Layout, Table, Button,Tooltip, Rate, message } from \"antd\";\n\nimport './index.css'\nimport { queryOrderByProductId } from '../../apis/order';\nimport { formatPrice } from '../../utils';\n\n\nconst ItemManage = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const parsedQuery = qs.parse(location.search.replace('?', ''));\n    const itemId = parsedQuery && parsedQuery.id;\n    const [itemData, setItemData] = useState(null);\n    const [itemComments, setItemComments] = useState([]);\n    const [itemOrders, setItemOrders] = useState([]);\n\n    useEffect(() => {\n        if (itemId) {\n            Promise.all([\n                queryItems({\n                    id: itemId\n                }),\n                viewCommentByProductId(itemId),\n                queryOrderByProductId(itemId)\n            ])\n            .then(([[res], comments, orders]) => {\n                setItemData(res);\n                setItemComments(comments);\n                setItemOrders(orders);\n            })\n            .catch((err) => {\n                console.error(err);\n                message.error(`Query Error: ${err.message}`);\n            })\n        } else {\n            history.push('/admin')\n        }\n    }, [itemId, history]);\n\n    const handleDeleteComments = (target) => {\n        const newList = itemComments.filter((_val, i) => i !== target);\n        setItemComments(newList);\n    };\n\n    const { Content } = Layout;\n\n    const orderColumns = [\n        {\n            title: 'Order ID',\n            dataIndex: 'orderId',\n            key: 'orderId',\n        },\n        {\n            title: 'Order Date',\n            dataIndex: 'orderTime',\n            key: 'orderTime',\n            render: (val) => moment(val).toLocaleString()\n        },\n        {\n            title: 'Total',\n            dataIndex: 'totalPrice',\n            key: 'totalPrice',\n            render: (val) => 'AU$' + formatPrice(val)\n        }\n    ];\n\n\n    const commentColumns = [\n        {\n            title: \"orderId\",\n            dataIndex: \"order_Id\",\n            key: \"order_Id\",\n        },\n        {\n            title: \"Content\",\n            dataIndex: \"comment\",\n            key: \"comment\",\n            width: 200,\n            ellipsis: {\n                showTitle: false,\n              },\n            render: content => (\n                <Tooltip placement=\"topLeft\" title={content}>\n                  {content}\n                </Tooltip>\n              ),\n        },\n        {\n            title: \"Rate\",\n            dataIndex: \"stars\",\n            key: \"rate\",\n            width: 150,\n            render: (stars) => <Rate value={stars} />\n        },\n        {\n            title: \"Action\",\n            key: \"action\",\n            render: (_v, _a, i) => (\n                <Button type=\"text\" onClick={() => handleDeleteComments(i)}>Delete</Button>\n            )\n        }\n    ];\n\n\n    return (\n        <Content style={{ padding: \"0 50px\", minHeight: '95vh' }}>\n            <div className=\"item-manage-container\">\n                {/* order */}\n                <div className=\"item-orders\">\n                    {itemData ? <Fragment>\n                        <h2>{itemData.id} {itemData.name}</h2>\n\n                        <div className=\"item-info\">\n                            <span><b>Stock: </b> {itemData.stock} </span>\n                            <span><b>Sales: </b> {itemData.saleNum.toLocaleString('en-US')}  </span>\n                        </div>\n                    </Fragment> : null}\n\n                    {/* <Divider orientation=\"left\">In-progress Orders</Divider>\n                    <Table\n                        // 表头\n                        columns={orderColumns}\n                        // 数据\n                        dataSource={inprogressData}\n                        size=\"middle\"\n                        pagination={{ pageSize: 10, size: \"small\" }}\n                        // id=\"admin-table\"\n                    />\n\n                    <Divider orientation=\"left\">Completed Orders</Divider> */}\n                    <Table\n                        // 表头\n                        columns={orderColumns}\n                        // 数据\n                        dataSource={itemOrders.map((item) => ({\n                            ...item,\n                            key: `order-${item.orderId}`\n                        }))}\n                        size=\"middle\"\n                        pagination={{ pageSize: 10, size: \"small\" }}\n                        // id=\"admin-table\"\n                    />\n\n                </div>\n                {/* comments */}\n                <div className=\"item-comments\">\n                    <h2>Comments List</h2>\n                    <Table\n                        // 表头\n                        columns={commentColumns}\n                        // 数据\n                        dataSource={itemComments.map((item) => ({\n                            ...item,\n                            key: `item-${item.order_Id}`\n                        }))}\n                        size=\"middle\"\n                        pagination={{ pageSize: 10, size: \"small\" }}\n                        // id=\"admin-table\"\n                    />\n                </div>\n            </div>\n        </Content>\n    )\n}\n\nexport default ItemManage;\n","import {\n  HashRouter as Router,\n  Switch\n} from 'react-router-dom';\nimport DefaultLayout from './layouts/DefaultLayout';\n\n// Page import\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Admin from './pages/Admin';\nimport User from './pages/User';\nimport Cart from './pages/Cart';\nimport Questionaire from './pages/Questionaire';\nimport ItemInfo from './pages/ItemInfo';\nimport Search from './pages/Search';\nimport Checkout from './pages/Checkout';\nimport AdminManage from './pages/AdminManage';\nimport Evaluation from './pages/Evaluation';\nimport ItemManage from './pages/ItemManage';\n\nimport './App.less';\n\nfunction App() {\n  return (\n      <Router>\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n              <DefaultLayout path=\"/admin\" component={Admin} />\n              <DefaultLayout path=\"/adminManage\" component={AdminManage} />\n              <DefaultLayout path=\"/itemManage\" component={ItemManage} />\n              <DefaultLayout path=\"/user\" component={User} />\n              <DefaultLayout path=\"/login\" component={Login} />\n              <DefaultLayout path=\"/reg\" component={Register} />\n              <DefaultLayout path=\"/questionaire\" component={Questionaire} />\n              <DefaultLayout path=\"/itemInfo\" component={ItemInfo} />\n              <DefaultLayout path=\"/search\" component={Search} />\n              <DefaultLayout path=\"/cart\" component={Cart} />\n              <DefaultLayout path=\"/checkout\" component={Checkout} />\n              <DefaultLayout path=\"/eval\" component={Evaluation} />\n              <DefaultLayout path=\"/\" component={Home} />\n          </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}